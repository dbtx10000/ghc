<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="RedPackageEventMapper" >
  <resultMap id="BaseResultMap" type="com.alidao.gifts.entity.RedPackageEvent" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="source_type" property="sourceType" jdbcType="INTEGER" />
    <result column="source_id" property="sourceId" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="total_nums" property="totalNums" jdbcType="INTEGER" />
    <result column="goget_nums" property="gogetNums" jdbcType="INTEGER" />
    <result column="total_integrals" property="totalIntegrals" jdbcType="INTEGER" />
    <result column="goget_integrals" property="gogetIntegrals" jdbcType="INTEGER" />
    <result column="integral_type_id" property="integralTypeId" jdbcType="BIGINT" />
    <result column="min_integral" property="minIntegral" jdbcType="INTEGER" />
    <result column="max_integral" property="maxIntegral" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
    <result column="get_count" property="getCount" jdbcType="INTEGER" />
    <result column="forward_count" property="forwardCount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, source_type, source_id, user_id, type, total_nums, goget_nums, total_integrals, 
    goget_integrals, integral_type_id, min_integral, max_integral, start_time, end_time, 
    status, create_time, update_time, state, get_count, forward_count
  </sql>
  <sql id="Basic_Conditions" >
    <![CDATA[where state = true]]>
    <if test="id != null" >
       and id = #{id,jdbcType=VARCHAR}
    </if>
    <if test="name != null" >
       and name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="sourceType != null" >
       and source_type = #{sourceType,jdbcType=INTEGER}
    </if>
    <if test="sourceId != null" >
       and source_id = #{sourceId,jdbcType=VARCHAR}
    </if>
    <if test="userId != null" >
       and user_id = #{userId,jdbcType=VARCHAR}
    </if>
    <if test="type != null" >
       and type = #{type,jdbcType=INTEGER}
    </if>
    <if test="totalNums != null" >
       and total_nums = #{totalNums,jdbcType=INTEGER}
    </if>
    <if test="gogetNums != null" >
       and goget_nums = #{gogetNums,jdbcType=INTEGER}
    </if>
    <if test="totalIntegrals != null" >
       and total_integrals = #{totalIntegrals,jdbcType=INTEGER}
    </if>
    <if test="gogetIntegrals != null" >
       and goget_integrals = #{gogetIntegrals,jdbcType=INTEGER}
    </if>
    <if test="integralTypeId != null" >
       and integral_type_id = #{integralTypeId,jdbcType=BIGINT}
    </if>
    <if test="minIntegral != null" >
       and min_integral = #{minIntegral,jdbcType=INTEGER}
    </if>
    <if test="maxIntegral != null" >
       and max_integral = #{maxIntegral,jdbcType=INTEGER}
    </if>
    <if test="startTime != null" >
       and start_time = #{startTime,jdbcType=TIMESTAMP}
    </if>
    <if test="endTime != null" >
       and end_time = #{endTime,jdbcType=TIMESTAMP}
    </if>
    <if test="status != null" >
       and status = #{status,jdbcType=INTEGER}
    </if>
    <if test="createTime != null" >
       and create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null" >
       and update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
    <if test="state != null" >
       and state = #{state,jdbcType=BIT}
    </if>
    <if test="getCount != null" >
       and get_count = #{getCount,jdbcType=INTEGER}
    </if>
    <if test="forwardCount != null" >
       and forward_count = #{forwardCount,jdbcType=INTEGER}
    </if>
    <include refid="COMMON_SQL.QUERY" />
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_red_package_event
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="select" resultMap="BaseResultMap" parameterType="com.alidao.gifts.entity.RedPackageEvent" >
    select 
    <include refid="Base_Column_List" />
    from t_red_package_event
    <include refid="Basic_Conditions" />
    limit 0,1
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.String" >
    update t_red_package_event  set state = false
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="delete" parameterType="com.alidao.gifts.entity.RedPackageEvent" >
    update t_red_package_event  set state = false
    <include refid="Basic_Conditions" />
  </update>
  <insert id="insert" parameterType="com.alidao.gifts.entity.RedPackageEvent" >
    insert into t_red_package_event (id, name, source_type, 
      source_id, user_id, type, 
      total_nums, goget_nums, total_integrals, 
      goget_integrals, integral_type_id, min_integral, 
      max_integral, start_time, end_time, 
      status, create_time, update_time, 
      state, get_count, forward_count
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{sourceType,jdbcType=INTEGER}, 
      #{sourceId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{totalNums,jdbcType=INTEGER}, #{gogetNums,jdbcType=INTEGER}, #{totalIntegrals,jdbcType=INTEGER}, 
      #{gogetIntegrals,jdbcType=INTEGER}, #{integralTypeId,jdbcType=BIGINT}, #{minIntegral,jdbcType=INTEGER}, 
      #{maxIntegral,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=BIT}, #{getCount,jdbcType=INTEGER}, #{forwardCount,jdbcType=INTEGER}
      )
  </insert>
  <update id="update" parameterType="com.alidao.gifts.entity.RedPackageEvent" >
    update t_red_package_event
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sourceType != null" >
        source_type = #{sourceType,jdbcType=INTEGER},
      </if>
      <if test="sourceId != null" >
        source_id = #{sourceId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="totalNums != null" >
        total_nums = #{totalNums,jdbcType=INTEGER},
      </if>
      <if test="gogetNums != null" >
        goget_nums = #{gogetNums,jdbcType=INTEGER},
      </if>
      <if test="totalIntegrals != null" >
        total_integrals = #{totalIntegrals,jdbcType=INTEGER},
      </if>
      <if test="gogetIntegrals != null" >
        goget_integrals = #{gogetIntegrals,jdbcType=INTEGER},
      </if>
      <if test="integralTypeId != null" >
        integral_type_id = #{integralTypeId,jdbcType=BIGINT},
      </if>
      <if test="minIntegral != null" >
        min_integral = #{minIntegral,jdbcType=INTEGER},
      </if>
      <if test="maxIntegral != null" >
        max_integral = #{maxIntegral,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="getCount != null" >
        get_count = #{getCount,jdbcType=INTEGER},
      </if>
      <if test="forwardCount != null" >
        forward_count = #{forwardCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="queryForCount" resultType="java.lang.Long" parameterType="java.util.Map" >
    select count(*) from t_red_package_event
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
  </select>
  <select id="queryForList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from 
    t_red_package_event
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
    <include refid="COMMON_SQL.LIMIT" />
  </select>
</mapper>