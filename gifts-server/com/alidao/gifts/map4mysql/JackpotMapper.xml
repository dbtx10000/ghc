<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="JackpotMapper" >
  <resultMap id="BaseResultMap" type="com.alidao.gifts.entity.Jackpot" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="relate_id" property="relateId" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="VARCHAR" />
    <result column="relate_type" property="relateType" jdbcType="INTEGER" />
    <result column="jackpot_type" property="jackpotType" jdbcType="INTEGER" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="win_count" property="winCount" jdbcType="INTEGER" />
    <result column="basic" property="basic" jdbcType="INTEGER" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="hot" property="hot" jdbcType="BIT" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, relate_id, hot,relate_type, count,product_id,win_count, basic, create_time, update_time, state,jackpot_type,integral
  </sql>
  
  <sql id="Basic_Conditions" >
  	<![CDATA[where state = true]]>
  	<if test="id != null">and id = #{id,jdbcType=VARCHAR}</if>
    <if test="relateId != null">and relate_id = #{relateId,jdbcType=VARCHAR}</if>
    <if test="productId != null">and product_id = #{productId,jdbcType=VARCHAR}</if>
    <if test="relateType != null">and relate_type = #{relateType,jdbcType=INTEGER}</if>
    <if test="jackpotType != null">and jackpot_type = #{jackpotType,jdbcType=INTEGER}</if>
    <if test="count != null">and count = #{count,jdbcType=INTEGER}</if>
    <if test="winCount != null">and win_count = #{winCount,jdbcType=INTEGER}</if>
    <if test="basic != null">and basic = #{basic,jdbcType=INTEGER}</if>
    <if test="integral != null">and integral = #{integral,jdbcType=INTEGER}</if>
    <if test="hot != null">and hot = #{hot,jdbcType=BIT}</if>
    <include refid="COMMON_SQL.QUERY" />
  </sql>
  <select id="select" resultMap="BaseResultMap" parameterType="com.alidao.gifts.entity.Jackpot" >
    select 
    <include refid="Base_Column_List" />
    from t_jackpot
    <include refid="Basic_Conditions" />
    limit 0,1
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_jackpot
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <update id="delete" parameterType="com.alidao.gifts.entity.Jackpot" >
    update t_jackpot set state = false 
    <include refid="Basic_Conditions" />
  </update>
  <insert id="insert" parameterType="com.alidao.gifts.entity.Jackpot" >
    insert into t_jackpot (id, relate_id,hot, relate_type, jackpot_type,
      count, win_count, basic,integral,
      create_time, update_time, state,product_id)
    values (#{id,jdbcType=VARCHAR}, #{relateId,jdbcType=VARCHAR}, #{hot,jdbcType=BIT}, #{relateType,jdbcType=INTEGER}, #{jackpotType,jdbcType=INTEGER}, 
      #{count,jdbcType=INTEGER}, #{winCount,jdbcType=INTEGER}, #{basic,jdbcType=INTEGER}, #{integral,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=BIT},#{productId,jdbcType=VARCHAR})
  </insert>
  <update id="update" parameterType="com.alidao.gifts.entity.Jackpot" >
    update t_jackpot
    <set >
      <if test="relateId != null" >
        relate_id = #{relateId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="relateType != null" >
        relate_type = #{relateType,jdbcType=INTEGER},
      </if>
      <if test="jackpotType != null" >
        jackpot_type = #{jackpotType,jdbcType=INTEGER},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="winCount != null" >
        win_count = #{winCount,jdbcType=INTEGER},
      </if>
      <if test="basic != null" >
        basic = #{basic,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="hot != null" >
        hot = #{hot,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="queryForCount" resultType="java.lang.Long" parameterType="java.util.Map" >
    select count(*) from t_jackpot
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
  </select>
  <select id="queryForList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from t_jackpot
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
    <include refid="COMMON_SQL.LIMIT" />
  </select>
  
  <!-- ====================================================================================== -->
  
  <!-- 扩展方法 -->
  <update id="modifyCounts" parameterType="com.alidao.gifts.entity.Jackpot">
  	update t_jackpot
  	<set >
  	  <if test="count != null" >
        count = count + #{count,jdbcType=INTEGER},
      </if>
      <if test="winCount != null" >
        win_count = win_count + #{winCount,jdbcType=INTEGER},
      </if>
  	</set>
  	where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 根据类型获取所有的奖池里存在的关联ID,用于导入的时候显示列表排除已经在奖池里的数据,也可不传入类型,获取所有的奖品记录 -->
  <select id="getAllJackpotRelateIdByRelateType" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select * from t_jackpot where state=true 
  	<if test="relateType != null">and relate_type = #{relateType}</if>
  	<if test="productId != null">and product_id = #{productId}</if>
  	<if test="jackpotType != null">and jackpot_type = #{jackpotType}</if>
  </select>
  
  <!-- 根据关联类型和奖池类型动态获取数据(排除剩余数为0的数据),用于摇一摇接口 -->
  <select id="getAllJackpotByShake" parameterType="java.util.Map" resultMap="BaseResultMap">
  	select * from t_jackpot where state=true 
  	<if test="relateType != null">and relate_type = #{relateType}</if>
  	<if test="jackpotType != null">and jackpot_type = #{jackpotType}</if>
  	<if test="productId != null">and product_id = #{productId}</if>
  	and count > 0
  </select>
  
  <select id="queryList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from t_jackpot
    <include refid="Basic_Conditions" />
  </select>
</mapper>