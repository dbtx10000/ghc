<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="BuyProductRecordMapper" >
  <resultMap id="BaseResultMap" type="com.alidao.users.entity.BuyProductRecord" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="VARCHAR" />
    <result column="order_id" property="orderId" jdbcType="VARCHAR" />
    <result column="cost_money" property="costMoney" jdbcType="VARCHAR" />
    <result column="scale" property="scale" jdbcType="INTEGER" />
    <result column="sncode" property="sncode" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="readed" property="readed" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, product_id, order_id, cost_money, scale, sncode, status, readed, create_time, update_time, state
  </sql>
  <sql id="Basic_Conditions" >
    <![CDATA[where state = true]]>
    <if test="id != null" >
       and id = #{id,jdbcType=VARCHAR}
    </if>
    <if test="userId != null" >
       and user_id = #{userId,jdbcType=VARCHAR}
    </if>
    <if test="productId != null" >
       and product_id = #{productId,jdbcType=VARCHAR}
    </if>
    <if test="orderId != null" >
       and order_id = #{orderId,jdbcType=VARCHAR}
    </if>
    <if test="costMoney != null" >
       and cost_money = #{costMoney,jdbcType=INTEGER}
    </if>
    <if test="scale != null" >
       and scale = #{scale,jdbcType=INTEGER}
    </if>
    <if test="sncode != null" >
       and sncode = #{sncode,jdbcType=VARCHAR}
    </if>
    <if test="status != null" >
       and status = #{status,jdbcType=INTEGER}
    </if>
    <if test="readed != null" >
       and readed = #{readed,jdbcType=INTEGER}
    </if>
    <if test="createTime != null" >
       and create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null" >
       and update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
    <if test="state != null" >
       and state = #{state,jdbcType=BIT}
    </if>
    <include refid="COMMON_SQL.QUERY" />
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_buy_product_record
    where id = #{id,jdbcType=VARCHAR}
    and state = true 
  </select>
  <select id="select" resultMap="BaseResultMap" parameterType="com.alidao.users.entity.BuyProductRecord" >
    select 
    <include refid="Base_Column_List" />
    from t_buy_product_record
    <include refid="Basic_Conditions" />
    limit 0,1
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.String" >
    update t_buy_product_record  set state = false
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="delete" parameterType="com.alidao.users.entity.BuyProductRecord" >
    update t_buy_product_record  set state = false
    <include refid="Basic_Conditions" />
  </update>
  <insert id="insert" parameterType="com.alidao.users.entity.BuyProductRecord" >
    insert into t_buy_product_record (id, user_id, product_id, 
      order_id, cost_money, scale, 
      sncode, status, readed, 
      create_time, update_time, state
      )
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, 
      #{orderId,jdbcType=VARCHAR}, #{costMoney,jdbcType=INTEGER}, #{scale,jdbcType=INTEGER}, 
      #{sncode,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{readed,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=BIT}
      )
  </insert>
  <update id="update" parameterType="com.alidao.users.entity.BuyProductRecord" >
    update t_buy_product_record
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="costMoney != null" >
        cost_money = #{costMoney,jdbcType=INTEGER},
      </if>
      <if test="scale != null" >
        scale = #{scale,jdbcType=INTEGER},
      </if>
      <if test="sncode != null" >
        sncode = #{sncode,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="readed != null" >
        readed = #{readed,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="queryForCount" resultType="java.lang.Long" parameterType="java.util.Map" >
    select count(*) from t_buy_product_record
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
  </select>
  <select id="queryForList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from 
    t_buy_product_record
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
    <include refid="COMMON_SQL.LIMIT" />
  </select>
</mapper>