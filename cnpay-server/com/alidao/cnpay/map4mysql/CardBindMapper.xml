<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CardBindMapper" >
  <resultMap id="BaseResultMap" type="com.alidao.cnpay.entity.CardBind" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="serial" property="serial" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="cert_type" property="certType" jdbcType="VARCHAR" />
    <result column="cert_id" property="certId" jdbcType="VARCHAR" />
    <result column="card_no" property="cardNo" jdbcType="VARCHAR" />
    <result column="open_bank_id" property="openBankId" jdbcType="VARCHAR" />
    <result column="open_bank_name" property="openBankName" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, serial, mobile, gender, user_name, cert_type, cert_id, card_no, open_bank_id, 
    open_bank_name, status, create_user, create_time, update_user, update_time, state
  </sql>
  <sql id="Basic_Conditions" >
    <![CDATA[where state = true]]>
    <if test="userId != null" >and user_id = #{userId,jdbcType=VARCHAR}</if>
    <if test="serial != null" >and serial = #{serial,jdbcType=VARCHAR}</if>
    <if test="mobile != null" >and mobile = #{mobile,jdbcType=VARCHAR}</if>
    <if test="status != null" >and status = #{status,jdbcType=VARCHAR}</if>
    <if test="cardNo != null" >and card_no = #{cardNo,jdbcType=VARCHAR}</if>
    <include refid="COMMON_SQL.QUERY" />
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_card_bind
    where id = #{id,jdbcType=BIGINT}
    and state = true 
  </select>
  <select id="select" resultMap="BaseResultMap" parameterType="com.alidao.cnpay.entity.CardBind" >
    select 
    <include refid="Base_Column_List" />
    from t_card_bind
    <include refid="Basic_Conditions" />
    limit 0,1
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    update t_card_bind  set state = false
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="delete" parameterType="com.alidao.cnpay.entity.CardBind" >
    update t_card_bind  set state = false
    <include refid="Basic_Conditions" />
  </update>
  <insert id="insert" parameterType="com.alidao.cnpay.entity.CardBind" >
    insert into t_card_bind (id, user_id, serial, 
      mobile, gender, user_name, 
      cert_type, cert_id, card_no, 
      open_bank_id, open_bank_name, status,
      create_user, create_time, update_user, 
      update_time, state)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{serial,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, 
      #{certType,jdbcType=VARCHAR}, #{certId,jdbcType=VARCHAR}, #{cardNo,jdbcType=VARCHAR}, 
      #{openBankId,jdbcType=VARCHAR}, #{openBankName,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=BIT})
    <selectKey keyProperty="id" resultType="java.lang.Long">
        select last_insert_id()
    </selectKey>
  </insert>
  <update id="update" parameterType="com.alidao.cnpay.entity.CardBind" >
    update t_card_bind
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="serial != null" >
        serial = #{serial,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="certType != null" >
        cert_type = #{certType,jdbcType=VARCHAR},
      </if>
      <if test="certId != null" >
        cert_id = #{certId,jdbcType=VARCHAR},
      </if>
      <if test="cardNo != null" >
        card_no = #{cardNo,jdbcType=VARCHAR},
      </if>
      <if test="openBankId != null" >
        open_bank_id = #{openBankId,jdbcType=VARCHAR},
      </if>
      <if test="openBankName != null" >
        open_bank_name = #{openBankName,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="queryForCount" resultType="java.lang.Long" parameterType="java.util.Map" >
    select count(*) from t_card_bind
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
  </select>
  <select id="queryForList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from 
    t_card_bind
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
    <include refid="COMMON_SQL.LIMIT" />
  </select>
</mapper>