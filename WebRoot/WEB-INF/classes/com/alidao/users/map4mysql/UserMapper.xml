<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="UserMapper" >
  <resultMap id="BaseResultMap" type="com.alidao.users.entity.User" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="source" property="source" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="credentials_type" property="credentialsType" jdbcType="VARCHAR" />
    <result column="credentials_code" property="credentialsCode" jdbcType="VARCHAR" />
    <result column="avatar" property="avatar" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="intro" property="intro" jdbcType="VARCHAR" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="assets" property="assets" jdbcType="INTEGER" />
    <result column="income" property="income" jdbcType="DECIMAL" />
    <result column="orders" property="orders" jdbcType="INTEGER" />
    <result column="friend" property="friend" jdbcType="INTEGER" />
    <result column="cards" property="cards" jdbcType="INTEGER" />
    <result column="pay_password" property="payPassword" jdbcType="VARCHAR" />
    <result column="touchs_password" property="touchsPassword" jdbcType="VARCHAR" />
    <result column="saler_id" property="salerId" jdbcType="VARCHAR" />
    <result column="is_saler" property="isSaler" jdbcType="VARCHAR" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, pid, type, source, status, mobile, username, password, realname, credentials_type, 
    credentials_code, avatar, email, address, intro, integral, assets, income, orders, 
    friend, cards, pay_password, touchs_password, saler_id,is_saler,create_user, create_time, update_user, update_time, 
    state
  </sql>
  <sql id="Basic_Conditions" >
  	<![CDATA[where state = true]]>
    <if test="pid != null">and pid = #{pid,jdbcType=VARCHAR}</if>
    <if test="type != null">and type = #{type,jdbcType=INTEGER}</if>
    <if test="source != null">and source = #{source,jdbcType=INTEGER}</if>
    <if test="status != null">and status = #{status,jdbcType=INTEGER}</if>
    <if test="mobile != null">and mobile = #{mobile,jdbcType=VARCHAR}</if>
    <if test="username != null">and username = #{username,jdbcType=VARCHAR}</if>
    <if test="password != null">and password = #{password,jdbcType=VARCHAR}</if>
    <if test="payPassword != null">and pay_password = #{payPassword,jdbcType=VARCHAR}</if>
    <if test="touchsPassword != null">and touchs_password = #{touchsPassword,jdbcType=VARCHAR}</if>
    <if test="salerId != null">and saler_id = #{salerId,jdbcType=VARCHAR}</if>
    <include refid="COMMON_SQL.QUERY"/>
  </sql>
  <select id="select" resultMap="BaseResultMap" parameterType="com.alidao.users.entity.User" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    <include refid="Basic_Conditions" />
    limit 0,1
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <update id="delete" parameterType="com.alidao.users.entity.User" >
    update t_user set state = false
    <include refid="Basic_Conditions" />
  </update>
  <update id="deleteByPrimaryKey" parameterType="java.lang.String" >
    update t_user set state = false
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="insert" parameterType="com.alidao.users.entity.User" >
    insert into t_user (id, pid, type, 
      source, status, mobile, 
      username, password, realname, 
      credentials_type, credentials_code, avatar, 
      email, address, intro, 
      integral, assets, income, 
      orders, friend, cards, pay_password, 
      touchs_password,saler_id,is_saler, create_user, create_time, 
      update_user, update_time, state
      )
    values (#{id,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{source,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{credentialsType,jdbcType=VARCHAR}, #{credentialsCode,jdbcType=VARCHAR}, #{avatar,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{intro,jdbcType=VARCHAR}, 
      #{integral,jdbcType=INTEGER}, #{assets,jdbcType=INTEGER}, #{income,jdbcType=DECIMAL}, 
      #{orders,jdbcType=INTEGER}, #{friend,jdbcType=INTEGER}, #{cards,jdbcType=INTEGER}, #{payPassword,jdbcType=VARCHAR}, 
      #{touchsPassword,jdbcType=VARCHAR}, #{salerId,jdbcType=VARCHAR},#{isSaler,jdbcType=VARCHAR}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=BIT}
      )
  </insert>
  <update id="update" parameterType="com.alidao.users.entity.User" >
    update t_user
    <set >
      <if test="pid != null" >
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="source != null" >
        source = #{source,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="credentialsType != null" >
        credentials_type = #{credentialsType,jdbcType=VARCHAR},
      </if>
      <if test="credentialsCode != null" >
        credentials_code = #{credentialsCode,jdbcType=VARCHAR},
      </if>
      <if test="avatar != null" >
        avatar = #{avatar,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="intro != null" >
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="assets != null" >
        assets = #{assets,jdbcType=INTEGER},
      </if>
      <if test="income != null" >
        income = #{income,jdbcType=DECIMAL},
      </if>
      <if test="orders != null" >
        orders = #{orders,jdbcType=INTEGER},
      </if>
      <if test="friend != null" >
        friend = #{friend,jdbcType=INTEGER},
      </if>
      <if test="cards != null" >
        cards = #{cards,jdbcType=INTEGER},
      </if>
      <if test="payPassword != null" >
        pay_password = #{payPassword,jdbcType=VARCHAR},
      </if>
      <if test="touchsPassword != null" >
        touchs_password = #{touchsPassword,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="isSaler != null" >
        is_saler = #{isSaler,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="queryForCount" resultType="java.lang.Long" parameterType="java.util.Map" >
    select count(*) from t_user
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
  </select>
  <select id="queryForList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
    <include refid="COMMON_SQL.LIMIT" />
  </select>
  <update id="modifyCounts" parameterType="com.alidao.users.entity.User" >
    update t_user
    <set >
      <if test="integral != null" >
        integral = integral + #{integral,jdbcType=INTEGER},
      </if>
      <if test="assets != null" >
        assets = assets + #{assets,jdbcType=INTEGER},
      </if>
      <if test="income != null" >
        income = income + #{income,jdbcType=INTEGER},
      </if>
      <if test="orders != null" >
        orders = orders + #{orders,jdbcType=INTEGER},
      </if>
      <if test="friend != null" >
        friend = friend + #{friend,jdbcType=INTEGER},
      </if>
      <if test="cards != null" >
        cards = cards + #{cards,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="relieveSaler" parameterType="com.alidao.users.entity.User">
  	update t_user set saler_id = null , is_saler = null  where  is_saler = #{isSaler,jdbcType=VARCHAR}
  </update>
  
</mapper>