<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="UserIntegralMapper" >
  <resultMap id="BaseResultMap" type="com.alidao.users.entity.UserIntegral" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="integral" property="integral" jdbcType="INTEGER"/>
    <result column="status" property="status" jdbcType="INTEGER"/>
    <result column="relate" property="relate" jdbcType="VARCHAR"/>
    <result column="note" property="note" jdbcType="VARCHAR"/>
    <result column="sell_integral" property="sellIntegral" jdbcType="INTEGER"/>
    <result column="vaild_end_time" property="vaildEndTime" jdbcType="TIMESTAMP"/>
    <result column="integral_type_id" property="integralTypeId" jdbcType="TIMESTAMP"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, type, integral, status, relate, note, sell_integral, vaild_end_time, integral_type_id, create_time, update_time, state
  </sql>
  <sql id="Basic_Conditions" >
  	<![CDATA[where state = true]]>
    <if test="userId != null">and user_id = #{userId,jdbcType=VARCHAR}</if>
    <if test="type != null">and type = #{type,jdbcType=INTEGER}</if>
    <if test="status != null">and status = #{status,jdbcType=INTEGER}</if>
    <if test="relate != null">and relate = #{relate,jdbcType=VARCHAR}</if>
    <if test="sellIntegral != null">and sell_integral = #{sellIntegral,jdbcType=INTEGER}</if>
    <if test="vaildEndTime != null">and vaild_end_time = #{vaildEndTime,jdbcType=TIMESTAMP}</if>
    <if test="integralTypeId != null">and integral_type_id = #{integralTypeId,jdbcType=BIGINT}</if>
  	<include refid="COMMON_SQL.QUERY"/>
  </sql>
  <select id="select" resultMap="BaseResultMap" parameterType="com.alidao.users.entity.UserIntegral" >
    select 
    <include refid="Base_Column_List" />
    from t_user_integral
    <include refid="Basic_Conditions" />
    limit 0,1
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_user_integral
    where id = #{id,jdbcType=BIGINT}
  </select>
  <update id="delete" parameterType="com.alidao.users.entity.UserIntegral" >
    update t_user_integral set state = false
    <include refid="Basic_Conditions" />
  </update>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    update t_user_integral set state = false
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.alidao.users.entity.UserIntegral" >
    insert into t_user_integral (id, user_id, type, 
      integral, status, relate,
      note, sell_integral, vaild_end_time, 
      integral_type_id, create_user, create_time, 
      update_user, update_time, state
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{integral,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{relate,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{sellIntegral,jdbcType=INTEGER}, #{vaildEndTime,jdbcType=TIMESTAMP}, 
      #{integralTypeId,jdbcType=BIGINT}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=BIT}
      )
    <selectKey keyProperty="id" resultType="java.lang.Long">
      select last_insert_id()
    </selectKey>
  </insert>
  <update id="update" parameterType="com.alidao.users.entity.UserIntegral" >
    update t_user_integral
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="relate != null" >
        relate = #{relate,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="sellIntegral != null" >
        sell_integral = #{sellIntegral,jdbcType=INTEGER},
      </if>
      <if test="vaildEndTime != null" >
        vaild_end_time = #{vaildEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="integralTypeId != null" >
        integral_type_id = #{integralTypeId,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="queryForCount" resultType="java.lang.Long" parameterType="java.util.Map" >
    select count(*) from t_user_integral
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
  </select>
  <select id="queryForList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from t_user_integral
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
    <include refid="COMMON_SQL.LIMIT" />
  </select>
  <select id="sumOfIntegral" resultType="java.lang.Integer" 
  		parameterType="com.alidao.users.entity.UserIntegral" >
    select sum(integral) from t_user_integral
    <include refid="Basic_Conditions" />
  </select>
  <update id="setUserStatus" parameterType="com.alidao.users.entity.UserIntegral" >
    update t_user_integral set status = #{status} where user_id = #{userId}
  </update>
</mapper>