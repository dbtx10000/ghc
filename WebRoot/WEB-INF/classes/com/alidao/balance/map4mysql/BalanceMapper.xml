<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="BalanceMapper" >
  <resultMap id="BaseResultMap" type="com.alidao.balance.entity.Balance" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="total_balance" property="totalBalance" jdbcType="DECIMAL" />
    <result column="freezing_balance" property="freezingBalance" jdbcType="DECIMAL" />
    <result column="surplus_balance" property="surplusBalance" jdbcType="DECIMAL" />
    <result column="last_modify" property="lastModify" jdbcType="BIGINT" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, total_balance, freezing_balance, surplus_balance, last_modify, create_user, 
    create_time, update_user, update_time, state
  </sql>
  <sql id="Basic_Conditions" >
    <![CDATA[where state = true]]>
    <if test="id != null" >
       and id = #{id,jdbcType=BIGINT}
    </if>
    <if test="userId != null" >
       and user_id = #{userId,jdbcType=VARCHAR}
    </if>
    <if test="lastModify != null" >
       and last_modify = #{lastModify,jdbcType=BIGINT}
    </if>
    <if test="createUser != null" >
       and create_user = #{createUser,jdbcType=VARCHAR}
    </if>
    <if test="createTime != null" >
       and create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateUser != null" >
       and update_user = #{updateUser,jdbcType=VARCHAR}
    </if>
    <if test="updateTime != null" >
       and update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
    <if test="state != null" >
       and state = #{state,jdbcType=BIT}
    </if>
    <include refid="COMMON_SQL.QUERY" />
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_balance
    where id = #{id,jdbcType=BIGINT}
    and state = true 
  </select>
  <select id="select" resultMap="BaseResultMap" parameterType="com.alidao.balance.entity.Balance" >
    select 
    <include refid="Base_Column_List" />
    from t_balance
    <include refid="Basic_Conditions" />
    limit 0,1
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    update t_balance  set state = false
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="delete" parameterType="com.alidao.balance.entity.Balance" >
    update t_balance  set state = false
    <include refid="Basic_Conditions" />
  </update>
  <insert id="insert" parameterType="com.alidao.balance.entity.Balance" >
    insert into t_balance (id, user_id, total_balance, 
      freezing_balance, surplus_balance, last_modify, 
      create_user, create_time, update_user, 
      update_time, state)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=VARCHAR}, #{totalBalance,jdbcType=DECIMAL}, 
      #{freezingBalance,jdbcType=DECIMAL}, #{surplusBalance,jdbcType=DECIMAL}, #{lastModify,jdbcType=BIGINT}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=BIT})
    <selectKey keyProperty="id" resultType="java.lang.Long">
        select last_insert_id()
    </selectKey>
  </insert>
  <update id="update" parameterType="com.alidao.balance.entity.Balance" >
    update t_balance
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="totalBalance != null" >
        total_balance = #{totalBalance,jdbcType=DECIMAL},
      </if>
      <if test="freezingBalance != null" >
        freezing_balance = #{freezingBalance,jdbcType=DECIMAL},
      </if>
      <if test="surplusBalance != null" >
        surplus_balance = #{surplusBalance,jdbcType=DECIMAL},
      </if>
      <if test="lastModify != null" >
        last_modify = #{lastModify,jdbcType=BIGINT},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateMoney" parameterType="com.alidao.balance.entity.Balance" >
    update t_balance
    <set>
      <if test="totalBalance != null" >
        total_balance = total_balance + #{totalBalance,jdbcType=DECIMAL},
      </if>
      <if test="freezingBalance != null" >
        freezing_balance = freezing_balance + #{freezingBalance,jdbcType=DECIMAL},
      </if>
      <if test="surplusBalance != null" >
        surplus_balance = surplusBalance + #{surplusBalance,jdbcType=DECIMAL},
      </if>
      <if test="lastModify != null" >
        last_modify = #{lastModify,jdbcType=BIGINT},
      </if>
     </set>
     where user_id = #{userId,jdbcType=VARCHAR}
  </update>
  
  <select id="queryForCount" resultType="java.lang.Long" parameterType="java.util.Map" >
    select count(*) from t_balance
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
  </select>
  <select id="queryForList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from 
    t_balance
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
    <include refid="COMMON_SQL.LIMIT" />
  </select>
</mapper>