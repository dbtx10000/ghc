<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ProductMapper" >
  <resultMap id="BaseResultMap" type="com.alidao.basic.entity.Product" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="buy_type" property="buyType" jdbcType="INTEGER" />
    <result column="control_status" property="controlStatus" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="VARCHAR" />
    <result column="income_start_time" property="incomeStartTime" jdbcType="TIMESTAMP" />
    <result column="income_end_time" property="incomeEndTime" jdbcType="TIMESTAMP" />
    <result column="subscribe_start_time" property="subscribeStartTime" jdbcType="TIMESTAMP" />
    <result column="subscribe_end_time" property="subscribeEndTime" jdbcType="TIMESTAMP" />
    <result column="logo" property="logo" jdbcType="VARCHAR" />
    <result column="total_money" property="totalMoney" jdbcType="INTEGER" />
    <result column="income" property="income" jdbcType="DECIMAL" />
    <result column="income_float" property="incomeFloat" jdbcType="INTEGER" />
    <result column="fling_money" property="flingMoney" jdbcType="INTEGER" />
    <result column="increase_money" property="increaseMoney" jdbcType="INTEGER" />
    <result column="max_money" property="maxMoney" jdbcType="INTEGER" />
    <result column="allot_type" property="allotType" jdbcType="VARCHAR" />
    <result column="allot_type_show" property="allotTypeShow" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="VARCHAR" />
    <result column="start_time_show" property="startTimeShow" jdbcType="INTEGER" />
    <result column="end_time" property="endTime" jdbcType="VARCHAR" />
    <result column="end_time_show" property="endTimeShow" jdbcType="INTEGER" />
    <result column="expect_income" property="expectIncome" jdbcType="VARCHAR" />
    <result column="expect_income_show" property="expectIncomeShow" jdbcType="INTEGER" />
    <result column="bank_name" property="bankName" jdbcType="VARCHAR" />
    <result column="account_name" property="accountName" jdbcType="VARCHAR" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="integral" property="integral" jdbcType="INTEGER" />
    <result column="intro" property="intro" jdbcType="VARCHAR" />
    <result column="contract_time" property="contractTime" jdbcType="TIMESTAMP" />
    <result column="jackpot" property="jackpot" jdbcType="INTEGER" />
    <result column="gain_by_scale" property="gainByScale" jdbcType="INTEGER" />
    <result column="integral_limit" property="integralLimit" jdbcType="INTEGER" />
    <result column="can_use_coupon" property="canUseCoupon" jdbcType="INTEGER" />
    <result column="income_type" property="incomeType" jdbcType="INTEGER" />
    <result column="income_days" property="incomeDays" jdbcType="INTEGER" />
    <result column="use_integral_type" property="useIntegralType" jdbcType="BIGINT" />
    <result column="small_product" property="smallProduct" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="subscribe_money" property="subscribeMoney" jdbcType="INTEGER" />
    <result column="actual_pay_money" property="actualPayMoney" jdbcType="INTEGER" />
    <result column="game" property="game" jdbcType="INTEGER" />
    <result column="pay_type" property="payType" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.alidao.basic.entity.Product" extends="BaseResultMap" >
    <result column="product_note" property="productNote" jdbcType="LONGVARCHAR" />
    <result column="allot_note" property="allotNote" jdbcType="LONGVARCHAR" />
    <result column="contract_note" property="contractNote" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, buy_type, control_status, type_id, income_start_time, income_end_time, 
    subscribe_start_time, subscribe_end_time, logo, total_money, income, income_float, 
    fling_money, increase_money, max_money, allot_type, allot_type_show, start_time, 
    start_time_show, end_time, end_time_show, expect_income, expect_income_show, 
    bank_name, account_name, account, integral, intro, contract_time, jackpot,game,
    gain_by_scale, integral_limit, can_use_coupon, income_type, income_days,
    use_integral_type, small_product, create_user, create_time, update_user, update_time, state,type,subscribe_money,actual_pay_money
    ,pay_type
  </sql>
  <sql id="Blob_Column_List" >
    product_note, allot_note, contract_note
  </sql>
  <sql id="Basic_Conditions" >
  	<![CDATA[where state = true]]>
    <if test="name != null">and name = #{name,jdbcType=VARCHAR}</if>
    <if test="type != null">and type = #{type,jdbcType=INTEGER}</if>
    <if test="buyType != null">and buy_type = #{buyType,jdbcType=INTEGER}</if>
    <if test="payType != null">and pay_type = #{payType,jdbcType=INTEGER}</if>
    <if test="typeId != null">and type_id = #{typeId,jdbcType=VARCHAR}</if>
    <include refid="COMMON_SQL.QUERY"/>
  </sql>
  <select id="select" resultMap="ResultMapWithBLOBs" parameterType="com.alidao.basic.entity.Product" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_product
    <include refid="Basic_Conditions" />
    limit 0,1
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_product
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <update id="delete" parameterType="com.alidao.basic.entity.Product" >
    update t_product set state = false 
    <include refid="Basic_Conditions" />
  </update>
  <update id="deleteByPrimaryKey" parameterType="java.lang.String" >
    update t_product set state = false 
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="insert" parameterType="com.alidao.basic.entity.Product" >
    insert into t_product (id, name, buy_type, 
      control_status, type_id, income_start_time, 
      income_end_time, subscribe_start_time, subscribe_end_time, 
      logo, total_money, income, 
      income_float, fling_money, increase_money, 
      max_money, allot_type, allot_type_show, 
      start_time, start_time_show, end_time, 
      end_time_show, expect_income, expect_income_show, 
      bank_name, account_name, account, 
      integral, intro, contract_time,
      jackpot, gain_by_scale, integral_limit,
      can_use_coupon, income_type, income_days,
      use_integral_type, small_product, create_user, create_time, 
      update_user, update_time, state, 
      product_note, allot_note, contract_note,type,subscribe_money,actual_pay_money,game,pay_Type
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{buyType,jdbcType=INTEGER}, 
      #{controlStatus,jdbcType=INTEGER}, #{typeId,jdbcType=VARCHAR}, #{incomeStartTime,jdbcType=TIMESTAMP}, 
      #{incomeEndTime,jdbcType=TIMESTAMP}, #{subscribeStartTime,jdbcType=TIMESTAMP}, #{subscribeEndTime,jdbcType=TIMESTAMP}, 
      #{logo,jdbcType=VARCHAR}, #{totalMoney,jdbcType=INTEGER}, #{income,jdbcType=DECIMAL}, 
      #{incomeFloat,jdbcType=INTEGER}, #{flingMoney,jdbcType=INTEGER}, #{increaseMoney,jdbcType=INTEGER}, 
      #{maxMoney,jdbcType=INTEGER}, #{allotType,jdbcType=VARCHAR}, #{allotTypeShow,jdbcType=INTEGER}, 
      #{startTime,jdbcType=VARCHAR}, #{startTimeShow,jdbcType=INTEGER}, #{endTime,jdbcType=VARCHAR}, 
      #{endTimeShow,jdbcType=INTEGER}, #{expectIncome,jdbcType=VARCHAR}, #{expectIncomeShow,jdbcType=INTEGER}, 
      #{bankName,jdbcType=VARCHAR}, #{accountName,jdbcType=VARCHAR}, #{account,jdbcType=VARCHAR}, 
      #{integral,jdbcType=INTEGER}, #{intro,jdbcType=VARCHAR}, #{contractTime,jdbcType=TIMESTAMP}, 
      #{jackpot,jdbcType=INTEGER}, #{gainByScale,jdbcType=INTEGER}, #{integralLimit,jdbcType=INTEGER}, 
      #{canUseCoupon,jdbcType=INTEGER}, #{incomeType,jdbcType=INTEGER}, #{incomeDays,jdbcType=INTEGER}, 
      #{useIntegralType,jdbcType=BIGINT}, #{smallProduct,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR},  #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, 
      #{productNote,jdbcType=LONGVARCHAR}, #{allotNote,jdbcType=LONGVARCHAR}, #{contractNote,jdbcType=LONGVARCHAR},#{type,jdbcType=INTEGER},
      #{subscribeMoney,jdbcType=INTEGER},#{actualPayMoney,jdbcType=INTEGER},#{game,jdbcType=INTEGER},#{payType,jdbcType=INTEGER}
      )
  </insert>
  <update id="update" parameterType="com.alidao.basic.entity.Product" >
    update t_product
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="buyType != null" >
        buy_type = #{buyType,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="controlStatus != null" >
        control_status = #{controlStatus,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=VARCHAR},
      </if>
      <if test="incomeStartTime != null" >
        income_start_time = #{incomeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="incomeEndTime != null" >
        income_end_time = #{incomeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subscribeStartTime != null" >
        subscribe_start_time = #{subscribeStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="subscribeEndTime != null" >
        subscribe_end_time = #{subscribeEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logo != null" >
        logo = #{logo,jdbcType=VARCHAR},
      </if>
      <if test="totalMoney != null" >
        total_money = #{totalMoney,jdbcType=INTEGER},
      </if>
      <if test="income != null" >
        income = #{income,jdbcType=DECIMAL},
      </if>
      <if test="incomeFloat != null" >
        income_float = #{incomeFloat,jdbcType=DECIMAL},
      </if>
      <if test="flingMoney != null" >
        fling_money = #{flingMoney,jdbcType=INTEGER},
      </if>
      <if test="increaseMoney != null" >
        increase_money = #{increaseMoney,jdbcType=INTEGER},
      </if>
      <if test="maxMoney != null" >
        max_money = #{maxMoney,jdbcType=INTEGER},
      </if>
      <if test="allotType != null" >
        allot_type = #{allotType,jdbcType=VARCHAR},
      </if>
      <if test="allotTypeShow != null" >
        allot_type_show = #{allotTypeShow,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=VARCHAR},
      </if>
      <if test="startTimeShow != null" >
        start_time_show = #{startTimeShow,jdbcType=INTEGER},
      </if>
      <if test="expectIncome != null" >
        expect_income = #{expectIncome,jdbcType=VARCHAR},
      </if>
      <if test="expectIncomeShow != null" >
        expect_income_show = #{expectIncomeShow,jdbcType=INTEGER},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=VARCHAR},
      </if>
      <if test="endTimeShow != null" >
        end_time_show = #{endTimeShow,jdbcType=INTEGER},
      </if>
      <if test="bankName != null" >
        bank_name = #{bankName,jdbcType=VARCHAR},
      </if>
      <if test="accountName != null" >
        account_name = #{accountName,jdbcType=VARCHAR},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="integral != null" >
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="intro != null" >
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="contractTime != null" >
        contract_time = #{contractTime,jdbcType=TIMESTAMP},
      </if>
      <if test="jackpot != null" >
        jackpot = #{jackpot,jdbcType=INTEGER},
      </if>
      <if test="gainByScale != null" >
        gain_by_scale = #{gainByScale,jdbcType=INTEGER},
      </if>
      <if test="integralLimit != null" >
        integral_limit = #{integralLimit,jdbcType=INTEGER},
      </if>
      <if test="canUseCoupon != null" >
        can_use_coupon = #{canUseCoupon,jdbcType=INTEGER},
      </if>
      <if test="incomeType != null" >
        income_type = #{incomeType,jdbcType=INTEGER},
      </if>
      <if test="incomeDays != null" >
        income_days = #{incomeDays,jdbcType=INTEGER},
      </if>
      <if test="useIntegralType != null" >
        use_integral_type = #{useIntegralType,jdbcType=INTEGER},
      </if>
      <if test="smallProduct != null" >
        small_product = #{smallProduct,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="productNote != null" >
        product_note = #{productNote,jdbcType=LONGVARCHAR},
      </if>
      <if test="allotNote != null" >
        allot_note = #{allotNote,jdbcType=LONGVARCHAR},
      </if>
      <if test="contractNote != null" >
        contract_note = #{contractNote,jdbcType=LONGVARCHAR},
      </if>
      <if test="subscribeMoney != null" >
        subscribe_money = #{subscribeMoney,jdbcType=INTEGER},
      </if>
      <if test="actualPayMoney != null" >
        actual_pay_money = #{actualPayMoney,jdbcType=INTEGER},
      </if>
      <if test="game != null" >
        game = #{game,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="queryForCount" resultType="java.lang.Long" parameterType="java.util.Map" >
    select count(*) from t_product
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
  </select>
  <select id="queryForList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from t_product
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
    <include refid="COMMON_SQL.LIMIT" />
  </select>
</mapper>