<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="SmsMapper" >
  <resultMap id="BaseResultMap" type="com.alidao.basic.entity.Sms" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="verify_code" property="verifyCode" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="exceed_time" property="exceedTime" jdbcType="TIMESTAMP"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, type, verify_code, mobile, status, token, exceed_time, create_time, update_time, state
  </sql>
  <sql id="Basic_Conditions" >
  	<![CDATA[where state = true]]>
    <if test="type != null">and type = #{type,jdbcType=INTEGER}</if>
    <if test="verifyCode != null">and verify_code = #{verifyCode,jdbcType=VARCHAR}</if>
    <if test="mobile != null">and mobile = #{mobile,jdbcType=VARCHAR}</if>
    <if test="token != null">and token = #{token,jdbcType=VARCHAR}</if>
    <if test="status != null">and status = #{status,jdbcType=INTEGER}</if>
    <if test="exceedTime != null">and exceed_time = #{exceedTime,jdbcType=TIMESTAMP}</if>
    <include refid="COMMON_SQL.QUERY"/>
  </sql>
  <select id="select" resultMap="BaseResultMap" parameterType="com.alidao.basic.entity.Sms" >
    select 
    <include refid="Base_Column_List" />
    from t_sms
    <include refid="Basic_Conditions" />
    limit 0,1
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_sms 
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <update id="delete" parameterType="com.alidao.basic.entity.Sms" >
    update t_sms set state = false
    <include refid="Basic_Conditions" />
  </update>
  <update id="deleteByPrimaryKey" parameterType="java.lang.String" >
    update t_sms set state = false 
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="insert" parameterType="com.alidao.basic.entity.Sms" >
    insert into t_sms (id, type, verify_code, 
      mobile, status, token, 
      exceed_time, create_user, create_time, 
      update_user, update_time, state
      )
    values (#{id,jdbcType=BIGINT}, #{type,jdbcType=INTEGER}, #{verifyCode,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{token,jdbcType=VARCHAR}, 
      #{exceedTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{state,jdbcType=BIT}
      )
    <selectKey keyProperty="id" resultType="java.lang.Long">
      select last_insert_id()
    </selectKey>
  </insert>
  <update id="update" parameterType="com.alidao.basic.entity.Sms" >
    update t_sms
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="verifyCode != null" >
        verify_code = #{verifyCode,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="token != null">
      	 token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="exceedTime != null" >
        exceed_time = #{exceedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="queryForCount" resultType="java.lang.Long" parameterType="java.util.Map" >
    select count(*) from t_sms
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
  </select>
  <select id="queryForList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from t_sms
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
    <include refid="COMMON_SQL.LIMIT" />
  </select>
</mapper>