<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="AdvertMapper" >
  <resultMap id="BaseResultMap" type="com.alidao.basic.entity.Advert" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="position" property="position" jdbcType="INTEGER" />
    <result column="image" property="image" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="creater_id" property="createrId" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="relate_id" property="relateId" jdbcType="BIGINT" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="hot" property="hot" jdbcType="BIT" />
    <result column="top" property="top" jdbcType="BIT" />
    <result column="weight" property="weight" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.alidao.basic.entity.Advert" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, position, image, type, creater_id, title, relate_id, url, hot, top, weight, create_time, 
    update_time, state
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <sql id="Basic_Conditions" >
    <![CDATA[where state = true]]>
    <if test="id != null" >
       and id = #{id,jdbcType=VARCHAR}
    </if>
    <if test="position != null" >
       and position = #{position,jdbcType=INTEGER}
    </if>
    <if test="image != null" >
       and image = #{image,jdbcType=VARCHAR}
    </if>
    <if test="type != null" >
       and type = #{type,jdbcType=INTEGER}
    </if>
    <if test="createrId != null" >
       and creater_id = #{createrId,jdbcType=VARCHAR}
    </if>
    <if test="title != null" >
       and title = #{title,jdbcType=VARCHAR}
    </if>
    <if test="relateId != null" >
       and relate_id = #{relateId,jdbcType=BIGINT}
    </if>
    <if test="url != null" >
       and url = #{url,jdbcType=VARCHAR}
    </if>
    <if test="hot != null" >
       and hot = #{hot,jdbcType=BIT}
    </if>
    <if test="top != null" >
       and top = #{top,jdbcType=BIT}
    </if>
    <if test="weight != null" >
       and weight = #{weight,jdbcType=BIGINT}
    </if>
    <if test="createTime != null" >
       and create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null" >
       and update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
    <if test="state != null" >
       and state = #{state,jdbcType=BIT}
    </if>
    <if test="content != null" >
       and content = #{content,jdbcType=LONGVARCHAR}
    </if>
    <include refid="COMMON_SQL.QUERY" />
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_advert
    where id = #{id,jdbcType=VARCHAR}
    and state = true 
  </select>
  <select id="select" resultMap="ResultMapWithBLOBs" parameterType="com.alidao.basic.entity.Advert" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_advert
    <include refid="Basic_Conditions" />
    limit 0,1
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.String" >
    update t_advert  set state = false
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="delete" parameterType="com.alidao.basic.entity.Advert" >
    update t_advert  set state = false
    <include refid="Basic_Conditions" />
  </update>
  <insert id="insert" parameterType="com.alidao.basic.entity.Advert" >
    insert into t_advert (id, position, image, 
      type, creater_id, title, 
      relate_id, url, hot, top, 
      weight, create_time, update_time, 
      state, content)
    values (#{id,jdbcType=VARCHAR}, #{position,jdbcType=INTEGER}, #{image,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{createrId,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{relateId,jdbcType=BIGINT}, #{url,jdbcType=VARCHAR}, #{hot,jdbcType=BIT}, #{top,jdbcType=BIT}, 
      #{weight,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=BIT}, #{content,jdbcType=LONGVARCHAR})
  </insert>
  <update id="update" parameterType="com.alidao.basic.entity.Advert" >
    update t_advert
    <set >
      <if test="position != null" >
        position = #{position,jdbcType=INTEGER},
      </if>
      <if test="image != null" >
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="createrId != null" >
        creater_id = #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="relateId != null" >
        relate_id = #{relateId,jdbcType=BIGINT},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="hot != null" >
        hot = #{hot,jdbcType=BIT},
      </if>
      <if test="top != null" >
        top = #{top,jdbcType=BIT},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="queryForCount" resultType="java.lang.Long" parameterType="java.util.Map" >
    select count(*) from t_advert
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
  </select>
  <select id="queryForList" resultMap="ResultMapWithBLOBs" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from 
    t_advert
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
    <include refid="COMMON_SQL.LIMIT" />
  </select>
</mapper>