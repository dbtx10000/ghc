<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ArticleMapper" >
  <resultMap id="BaseResultMap" type="com.alidao.basic.entity.Article" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="category_id" property="categoryId" jdbcType="BIGINT" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
    <result column="url" property="url" jdbcType="VARCHAR" />
    <result column="weight" property="weight" jdbcType="BIGINT" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.alidao.basic.entity.Article" extends="BaseResultMap" >
    <result column="detail" property="detail" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, category_id, title, type, description, pic_url, url, weight, create_user, create_time, 
    update_user, update_time, state
  </sql>
  <sql id="Blob_Column_List" >
    detail
  </sql>
  <sql id="Basic_Conditions" >
  	<![CDATA[where state = true]]>
    <if test="categoryId != null">and category_id = #{categoryId,jdbcType=BIGINT}</if>
    <if test="mode != null">and type = #{mode,jdbcType=INTEGER}</if>
    <include refid="COMMON_SQL.QUERY"/>
  </sql>
  <select id="select" resultMap="BaseResultMap" parameterType="com.alidao.basic.entity.Article" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_article
    <include refid="Basic_Conditions" />
    limit 0,1
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from t_article
    where id = #{id,jdbcType=BIGINT}
  </select>
  <update id="delete" parameterType="com.alidao.basic.entity.Article" >
    update t_article set state = false
    <include refid="Basic_Conditions" />
  </update>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    update t_article set state = false
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="insert" parameterType="com.alidao.basic.entity.Article" >
    insert into t_article (id, category_id, title, 
      type, description, pic_url, 
      url, weight, create_user, 
      create_time, update_user, update_time, 
      state, detail)
    values (#{id,jdbcType=BIGINT}, #{categoryId,jdbcType=BIGINT}, #{title,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{picUrl,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{weight,jdbcType=BIGINT}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=BIT}, #{detail,jdbcType=LONGVARCHAR})
    <selectKey keyProperty="id" resultType="java.lang.Long">
      select last_insert_id()
    </selectKey>
  </insert>
  <update id="update" parameterType="com.alidao.basic.entity.Article" >
    update t_article
    <set >
      <if test="categoryId != null" >
        category_id = #{categoryId,jdbcType=BIGINT},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null" >
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="url != null" >
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="weight != null" >
        weight = #{weight,jdbcType=BIGINT},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
      <if test="detail != null" >
        detail = #{detail,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="queryForCount" resultType="java.lang.Long" parameterType="java.util.Map" >
    select count(*) from t_article
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
  </select>
  <select id="queryForList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from t_article
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
    <include refid="COMMON_SQL.LIMIT" />
  </select>
</mapper>