<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="IntegralTypeMapper" >
  <resultMap id="BaseResultMap" type="com.alidao.basic.entity.IntegralType" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="valid_start_time" property="validStartTime" jdbcType="TIMESTAMP" />
    <result column="valid_end_time" property="validEndTime" jdbcType="TIMESTAMP" />
    <result column="time" property="time" jdbcType="INTEGER" />
    <result column="unit" property="unit" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, type, valid_start_time, valid_end_time, time, unit, create_time, update_time, 
    state
  </sql>
  <sql id="Basic_Conditions" >
    <![CDATA[where state = true]]>
    <if test="id != null" >
       and id = #{id,jdbcType=BIGINT}
    </if>
    <if test="name != null" >
       and name = #{name,jdbcType=VARCHAR}
    </if>
    <if test="type != null" >
       and type = #{type,jdbcType=INTEGER}
    </if>
    <if test="validStartTime != null" >
       and valid_start_time = #{validStartTime,jdbcType=TIMESTAMP}
    </if>
    <if test="validEndTime != null" >
       and valid_end_time = #{validEndTime,jdbcType=TIMESTAMP}
    </if>
    <if test="time != null" >
       and time = #{time,jdbcType=INTEGER}
    </if>
    <if test="unit != null" >
       and unit = #{unit,jdbcType=INTEGER}
    </if>
    <if test="createTime != null" >
       and create_time = #{createTime,jdbcType=TIMESTAMP}
    </if>
    <if test="updateTime != null" >
       and update_time = #{updateTime,jdbcType=TIMESTAMP}
    </if>
    <if test="state != null" >
       and state = #{state,jdbcType=BIT}
    </if>
    <include refid="COMMON_SQL.QUERY" />
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_integral_type
    where id = #{id,jdbcType=BIGINT}
    and state = true 
  </select>
  <select id="select" resultMap="BaseResultMap" parameterType="com.alidao.basic.entity.IntegralType" >
    select 
    <include refid="Base_Column_List" />
    from t_integral_type
    <include refid="Basic_Conditions" />
    limit 0,1
  </select>
  <update id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    update t_integral_type  set state = false
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="delete" parameterType="com.alidao.basic.entity.IntegralType" >
    update t_integral_type  set state = false
    <include refid="Basic_Conditions" />
  </update>
  <insert id="insert" parameterType="com.alidao.basic.entity.IntegralType" >
    insert into t_integral_type (id, name, type, 
      valid_start_time, valid_end_time, time, 
      unit, create_time, update_time, 
      state)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{validStartTime,jdbcType=TIMESTAMP}, #{validEndTime,jdbcType=TIMESTAMP}, #{time,jdbcType=INTEGER}, 
      #{unit,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=BIT})
    <selectKey keyProperty="id" resultType="java.lang.Long">
        select last_insert_id()
    </selectKey>
  </insert>
  <update id="update" parameterType="com.alidao.basic.entity.IntegralType" >
    update t_integral_type
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="validStartTime != null" >
        valid_start_time = #{validStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validEndTime != null" >
        valid_end_time = #{validEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=INTEGER},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="queryForCount" resultType="java.lang.Long" parameterType="java.util.Map" >
    select count(*) from t_integral_type
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
  </select>
  <select id="queryForList" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select 
    <include refid="Base_Column_List" />
    from 
    t_integral_type
    <include refid="Basic_Conditions" />
    <include refid="COMMON_SQL.FUZZY" />
    <include refid="COMMON_SQL.LIMIT" />
  </select>
</mapper>